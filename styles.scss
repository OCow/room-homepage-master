$mobile-width: 375px;
// $desktop-width: 1440px;
$desktop-width: 1000px;

$dark-gray: hsl(0, 0%, 63%);
$black: hsl(0, 0%, 0%);
$white: hsl(0, 0%, 100%);
$very-dark-gray: hsl(0, 0%, 27%);

$font-family: "Spartan", sans-serif;
$font-weight-1: 500;
$font-weight-2: 600;
$font-weight-3: 700;

$main-1-width: 30%;

body {
  font-family: $font-family;
}

p {
  margin-bottom: 40px;
  color: $dark-gray;
  line-height: 2rem;
}

.backdrop {
  position: fixed;
  top: 0;
  left: 0;
  height: 100%;
  width: 100%;
  z-index: 500;
  background-color: rgba(0, 0, 0, 0.5);
}

nav.nav-view-default {
  // background-color: red;
  // make width 100 % in mobile view, then use justify-content: space-between; to
  // center "room" item appropriately
  z-index: 1000;
  width: 100%;
  position: absolute;
  margin-top: 30px;
  color: white;

  @media (max-width: $desktop-width) {
    // only show burger menu, not the actual links
    ul > li.nav-link {
      display: none;
    }
  }

  @media (min-width: $desktop-width) {
    width: auto;
  }
}

nav.nav-view-clicked {
  z-index: 1000;
  width: 100%;
  position: absolute;
  margin-top: 0;
  background-color: $white;
  color: $very-dark-gray;
  padding-top: 40px;
  padding-bottom: 40px;

  li:last-child {
    margin-right: 10%;
  }

  .shop-name {
    display: none;
  }
}

// in case of non clicked nav thinggy, dont display the close button
// nav.nav-view-default > ul > li.close-mobile-menu {
//   display: none;
// }

// in case the burger was clicked, do not show the burger anymore
// TODO we could get rid of one thing (burger or close button) and
// TODO simply change the referenced svg file
// nav.nav-view-clicked > ul > li.burger-menu {
//   display: none;
// }

nav > ul {
  // remove bullets from list
  list-style-type: none;
  display: flex;
  flex-direction: row;
  align-items: center;
  justify-content: space-between;
}

nav > ul > li {
  // show list items in one line
  margin-right: 20px;
  font-size: 14px;
}

nav > ul > li.shop-name {
  font-size: 25px;
  font-weight: $font-weight-2;

  @media (min-width: $desktop-width) {
    font-size: 30px;
  }
}

nav > ul > li.mobile-menu-button {
  @media (min-width: $desktop-width) {
    display: none;
  }
}

nav > ul > li.nav-link {
  @media (min-width: $desktop-width) {
    // display actual links only on desktop
    display: list-item;
  }
}

h1,
h2 {
  color: $very-dark-gray;
}

.shop-now {
  color: $very-dark-gray;
  text-decoration: none;
  letter-spacing: 10px;
}

.no-display {
  display: none;
}

.page-text-container {
  // top, left and right, bottom
  margin: 40px 20px 40px;

  @media (min-width: $desktop-width) {
    margin: 40px 50px 50px;
  }
}

.about-text-container {
  // top, left and right, bottom
  margin: 40px 20px 40px;

  @media (min-width: $desktop-width) {
    margin: 80px 70px 50px;
  }
}

.main-container {
  display: flex;
  flex-direction: column;

  @media (min-width: $desktop-width) {
    flex-direction: row;
    flex-wrap: wrap;
  }
}

.main-1 {
  position: relative;
  min-height: 500px;
  //background image is set in javascript, because this is also
  //changed in javascript when buttons are being pressed
  // background-image: url("./images/mobile-image-hero-1.jpg");
  background-size: cover;
  background-repeat: no-repeat;
  background-position: center;

  @media (min-width: $desktop-width) {
    width: 58%;
    min-height: 500px;
    background-image: url("./images/desktop-image-hero-1.jpg");
    background-position: center;
  }
}

.main-2 {
  // use position relative so that navigation-buttons-container can be
  //positioned relative to the parent element. This helps us for placing
  //the navigation buttons (arrow left/right) in the bottom left corner
  position: relative;

  @media (min-width: $desktop-width) {
    width: 42%;
  }
}

.navigation-buttons-container-mobile {
  width: 120px;
  height: 60px;
  position: absolute;
  right: 0;
  bottom: 0;
  display: flex;

  @media (min-width: $desktop-width) {
    display: none;
  }
}

#navigation-button-left-mobile {
  background-color: $black;
  width: 50%;
  background-image: url("./images/icon-angle-left.svg");
  background-repeat: no-repeat;
  background-position: center;
}

#navigation-button-right-mobile {
  background-color: $black;
  width: 50%;

  background-image: url("./images/icon-angle-right.svg");
  background-repeat: no-repeat;
  background-position: center;
}

.navigation-buttons-container-desktop {
  display: none;

  @media (min-width: $desktop-width) {
    height: 13%;

    //the width is 100 % - 58 % (main-1) - 30 % (main-5)
    //of the whole viewport. However, in this case the
    //width is calculated as a fraction of main-2, therefore
    //it is almost 29 %.
    // TODO figure out a way to do that better
    width: 28.6%;
    position: absolute;
    left: 0;
    bottom: 0;
    display: flex;
  }
}

#navigation-button-left-desktop {
  background-color: $black;
  width: 50%;
  background-image: url("./images/icon-angle-left.svg");
  background-repeat: no-repeat;
  background-position: center;
}

#navigation-button-right-desktop {
  background-color: $black;
  width: 50%;
  background-image: url("./images/icon-angle-right.svg");
  background-repeat: no-repeat;
  background-position: center;
}

.main-3 {
  // background-color: yellow;
  width: 100%;
  min-height: 300px;

  background-image: url("./images/image-about-dark.jpg");
  background-size: cover;
  background-repeat: no-repeat;
  background-position: center;

  @media (min-width: $desktop-width) {
    width: 30%;
    // min-height: 300px;
  }
}

.main-4 {
  // background-color: lightcoral;

  @media (min-width: $desktop-width) {
    width: 40%;
  }
}

.main-5 {
  // background-color: lightgreen;
  width: 100%;
  min-height: 300px;

  background-image: url("./images/image-about-light.jpg");
  background-size: cover;
  background-repeat: no-repeat;
  background-position: center;

  @media (min-width: $desktop-width) {
    width: 30%;
  }
}
